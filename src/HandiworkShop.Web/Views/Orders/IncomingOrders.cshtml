@model List<HandiworkShop.Web.ViewModels.OrderViewModel>

@{
    ViewData["Title"] = "Входящие заказы";
}
<div>
    @foreach (var order in Model)
    {
    <div>
        <p>@order.Title</p>
        <p>@order.Description</p>
        <p>@order.Price</p>
        <p>@order.End</p>
        @if (order.Tags.Any())
        {
            @foreach (var tag in order.Tags)
            {
                <div>@tag.Name</div>
            }
        }
        @if (order.Tasks.Any())
        {
            @foreach (var task in order.Tasks)
            {
                <p>@task.Title</p>
                <p>@task.Description</p>
                <p>@task.Start</p>
                <p>@task.End</p>
            }
        }
        @switch (order.State)
        {
            case HandiworkShop.Common.Enums.StateType.InProcess:
                <form method="post" asp-controller="Orders" asp-action="CompleteOrder">
                    <button type="submit" name="orderId" value=@order.Id>Завершить заказ</button>
                </form>
                <form method="post" asp-controller="Orders" asp-action="CancelOrder">
                    <button type="submit" name="orderId" value=@order.Id>Отказаться от заказа</button>
                </form>
                <form method="get" asp-controller="Orders" asp-action="CreateTask">
                    <button type="submit" name="orderId" value=@order.Id>Добавить задание</button>
                </form>
                break;
            case HandiworkShop.Common.Enums.StateType.AwaitingConfirm:
                <form method="post" asp-controller="Orders" asp-action="DeclineOrder">
                    <button type="submit" name="orderId" value=@order.Id>Отказаться от заказа</button>
                </form>
                <form method="post" asp-controller="Orders" asp-action="AcceptOrder">
                    <button type="submit" name="orderId" value=@order.Id>Принять заказ</button>
                </form>
                break;
        }
    </div>
    }
</div>

